#!/bin/bash

usage()
{
    echo "remove C/C++ comments" >&2
    echo "Usage: $(basename $0) [<file...>]" >&2
    exit 1
}

remove_comment()
{
    # remove single line C++ comment
    sed '/^[[:space:]]*\/\// d' |\
    # remove single line C comment
    sed '/^[[:space:]]*\/\*.*\*\/[[:space:]]*$/ d' |\
    # remove inline C/C++ comment
    sed 's#[[:space:]]*//.*##; s#[[:space:]]*/\*.*\*/[[:space:]]*##' | \
    # remove multiple line C comments
    awk '
    {
        if ($0~/\/\*/) {
            if (!del) {
                del = 1
                sub(/[[:space:]]*\/\*.*/, "")
                if ($0 != "") print
            }
        }
        else if ($0~/\*\//) {
            del = 0
            sub(/.*\*\//, "")
            if ($0 != "") print
        }
        else
        {
           if (!del) print
        }
    }
    '
}

remove_comment_in_file()
{
    _f=$1
    [[ -f $_f ]] || { echo "$_f is not file" >&2; return 1; }

    _type=$(file $_f)
    grep -q 'C source' <<< "$_type" || grep -q 'C++ source' <<< "$_type" || return 1

    # do not touch file without comments
    grep -q '/\*\|//' $_f || return 0

    cat $_f | remove_comment > $_f.temp && mv $_f.temp $_f

    grep -q '/\*\|//' $_f && echo "comments in $_f are not removed clearly" >&2 && return 1
}

[[ "$1" == "-h" || "$1" == "--help" ]] && usage

if [[ $# -eq 0 ]]
then
    remove_comment
else
    for f in $*
    do
        remove_comment_in_file $f
    done
fi
