#!/bin/bash

usage()
{
    echo "print process cpu usage" >&2
    echo "Usage: $0 <processname>" >&2
    exit 1
# refer to http://www.orczhou.com/index.php/2013/10/how-linux-caculate-cpu-usage-for-process/
}

[[ "$1" == "-h" ]] && usage

get_cpu_stat ()
{
	head -n 1 /proc/stat
}

get_proc_stat ()
{
	head -n 1 /proc/$1/stat
}

get_cpu_tick ()
{
	awk '{for(i=2;i<=NF;i++)time+=$i; print time;}' <<< "$1"
}

get_proc_tick ()
{
	awk '{print $14+$15+$16+$17}' <<< "$1"
}

proc_name=$1
[ -n "$proc_name" ] || usage

# try process
proc_pid=$(ps -e | grep " $proc_name$" | awk '{print $2}')
# try thread
[ -n "$proc_pid" ] || proc_pid=$(ps -eL | grep " $proc_name$" | awk '{print $2}')

[ -n "$proc_pid" ] || { echo "fail to get pid of $proc_name" >&2; exit 1; }

proc_stats_file=$HOME/$proc_name.stat.$$
stat_interval=10

echo "======================= cpu usage (interval = $stat_interval seconds) =======================" | tee -a $proc_stats_file
echo "date   %PEAK   PROC_PEAK   CPU_PEAK   %AVG   PROC_TOTAL   CPU_TOTAL" | tee -a $proc_stats_file

count=0
cpu_tick_total=0
proc_tick_total=0
while (( count < 10000 )) ; do
	let count++

	# save proc stat before sleep
	cpu_stat_a="$(get_cpu_stat)"
	proc_stat_a="$(get_proc_stat $proc_pid)"

	sleep $stat_interval

	# save proc stat after sleep
	cpu_stat_b="$(get_cpu_stat)"
	proc_stat_b="$(get_proc_stat $proc_pid)"

	[ -n "$proc_stat_a" -o -n "$proc_stat_b" ] || { echo "fail to get proc stat of $proc_name" >&2; exit 1; }

	# calculate cpu usage
	cpu_tick_a=$(get_cpu_tick "$cpu_stat_a")
	cpu_tick_b=$(get_cpu_tick "$cpu_stat_b")
	proc_tick_a=$(get_proc_tick "$proc_stat_a")
	proc_tick_b=$(get_proc_tick "$proc_stat_b")

	cpu_tick_peak=$(( cpu_tick_b - cpu_tick_a ))
	proc_tick_peak=$(( proc_tick_b - proc_tick_a ))

	cpu_tick_total=$(( cpu_tick_total + cpu_tick_peak ))
	proc_tick_total=$(( proc_tick_total + proc_tick_peak ))

	echo "$proc_tick_peak $cpu_tick_peak $proc_tick_total $cpu_tick_total" |
	awk -v vdate="$(date)" '
	{
		printf "%s %5.2f %4d %4d %5.2f %8d %8d\n",
			vdate, $1*100.0/$2, $1, $2, $3*100.0/$4, $3, $4
	}
	' | tee -a $proc_stats_file

done

exit 0
